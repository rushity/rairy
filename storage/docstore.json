{"docstore/metadata": {"ef0b1902-ca91-445b-8cf4-85f30b1c5acb": {"doc_hash": "9eb01ab0ddd66b931af4f3bb4b62a4598c0a25189a24949788c1c65045bbc569"}, "bbfb3764-7618-4a9a-aae5-ef89e29188b9": {"doc_hash": "90e7c93ddfcf2fde4e64ea281e2b85898cd1f24d3681c20b3d42edf71838c0bf"}, "eabd1aca-3d32-4962-a542-8d9ed90563cf": {"doc_hash": "0727d1b5247d4dcf096a6f10cf3dd00212e871ebbae470613beeb13e247b60a2"}, "8633f0c7-76d6-4664-89e5-398ae026b0db": {"doc_hash": "eb5e58ea594c94c5bbb323a0173ca65446174bf3b103ac9386db635b308bc077"}, "5e93f72a-2936-43e0-b9d5-3a33d5b549b8": {"doc_hash": "3f6ce5fb14159b696a4074a1d9de81df9bfb528a07b5b66181ae80b99d535da2"}, "589ecb62-2fc5-46ec-ac33-9dc82483c77b": {"doc_hash": "9378fda16b0c649af8626bb49786aae7c752fa9cdbe6021ad1c06df6f6ff69a3"}, "114dc678-1ca1-488b-b4aa-c3797c83f5f5": {"doc_hash": "c8008849e7d0a3b5f9459c8db8b4361a888bbf1db6a10fe23f69cd034853ac06"}, "e3055dd1-4ea9-4067-a322-576d47309562": {"doc_hash": "293360f0c183e332b65e4051aca7abe3a92d0c17556888e8db977f38843fa096", "ref_doc_id": "ef0b1902-ca91-445b-8cf4-85f30b1c5acb"}, "a4b42e22-0bea-4f46-9d69-cd6f2d2814b1": {"doc_hash": "4ad029501907730b24784019587516b02405e05f9808cd63fc6219a22cb54fa7", "ref_doc_id": "bbfb3764-7618-4a9a-aae5-ef89e29188b9"}, "af8dabc6-7c2c-478e-b717-8df006f72fef": {"doc_hash": "3d19abd70abe1c3b4adb17b2601301041c6e6b8ed54e753d9eab8dcdd78d673c", "ref_doc_id": "eabd1aca-3d32-4962-a542-8d9ed90563cf"}, "1367f771-46cd-4512-ac27-48d56ba1117e": {"doc_hash": "4553aae725ec9faa18eed9a16863975c0711837f478e59872fa8f45d9201dcc7", "ref_doc_id": "8633f0c7-76d6-4664-89e5-398ae026b0db"}, "f4e04e6a-8730-4d3c-954a-9d57257475b8": {"doc_hash": "ddd7830c63c50f75cc7f2b61f166145d002f7f7b6c0bf35ce592b33ad5e79078", "ref_doc_id": "5e93f72a-2936-43e0-b9d5-3a33d5b549b8"}, "6bbd3859-ce97-4e65-aa0d-ce053bde2704": {"doc_hash": "3ef9484244325f61a14b2984c7472e895ecea09db8d573aff49da1478b37f339", "ref_doc_id": "589ecb62-2fc5-46ec-ac33-9dc82483c77b"}, "95b62f9c-6271-406f-aa49-c2c7165c8efb": {"doc_hash": "9ad8f2473447fa5a65f354626a6929f7987ae93a39083be6a9c2e2aeab139548", "ref_doc_id": "114dc678-1ca1-488b-b4aa-c3797c83f5f5"}}, "docstore/ref_doc_info": {"ef0b1902-ca91-445b-8cf4-85f30b1c5acb": {"node_ids": ["e3055dd1-4ea9-4067-a322-576d47309562"], "metadata": {"page_label": "1", "file_name": "Info.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Info.pdf", "file_type": "application/pdf", "file_size": 3936187, "creation_date": "2025-09-03", "last_modified_date": "2025-09-03"}}, "bbfb3764-7618-4a9a-aae5-ef89e29188b9": {"node_ids": ["a4b42e22-0bea-4f46-9d69-cd6f2d2814b1"], "metadata": {"page_label": "1", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}}, "eabd1aca-3d32-4962-a542-8d9ed90563cf": {"node_ids": ["af8dabc6-7c2c-478e-b717-8df006f72fef"], "metadata": {"page_label": "2", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}}, "8633f0c7-76d6-4664-89e5-398ae026b0db": {"node_ids": ["1367f771-46cd-4512-ac27-48d56ba1117e"], "metadata": {"page_label": "3", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}}, "5e93f72a-2936-43e0-b9d5-3a33d5b549b8": {"node_ids": ["f4e04e6a-8730-4d3c-954a-9d57257475b8"], "metadata": {"page_label": "4", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}}, "589ecb62-2fc5-46ec-ac33-9dc82483c77b": {"node_ids": ["6bbd3859-ce97-4e65-aa0d-ce053bde2704"], "metadata": {"page_label": "1", "file_name": "RF.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\RF.pdf", "file_type": "application/pdf", "file_size": 311026, "creation_date": "2025-09-02", "last_modified_date": "2025-07-25"}}, "114dc678-1ca1-488b-b4aa-c3797c83f5f5": {"node_ids": ["95b62f9c-6271-406f-aa49-c2c7165c8efb"], "metadata": {"page_label": "2", "file_name": "RF.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\RF.pdf", "file_type": "application/pdf", "file_size": 311026, "creation_date": "2025-09-02", "last_modified_date": "2025-07-25"}}}, "docstore/data": {"e3055dd1-4ea9-4067-a322-576d47309562": {"__data__": {"id_": "e3055dd1-4ea9-4067-a322-576d47309562", "embedding": null, "metadata": {"page_label": "1", "file_name": "Info.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Info.pdf", "file_type": "application/pdf", "file_size": 3936187, "creation_date": "2025-09-03", "last_modified_date": "2025-09-03"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef0b1902-ca91-445b-8cf4-85f30b1c5acb", "node_type": "4", "metadata": {"page_label": "1", "file_name": "Info.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Info.pdf", "file_type": "application/pdf", "file_size": 3936187, "creation_date": "2025-09-03", "last_modified_date": "2025-09-03"}, "hash": "9eb01ab0ddd66b931af4f3bb4b62a4598c0a25189a24949788c1c65045bbc569", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "About RAI \nHello          , my name is RAI. \nI am an Artificial Intelligence assistant created by Yadav Rushitkumar Shankarbhai, an \nArtificial Intelligence and Machine Learning developer. \nIf you ask me questions like \u201cWho made you?\u201d, \u201cBy whom were you created?\u201d, \u201cWhat is \nyour name?\u201d, or \u201cIntroduce yourself\u201d, here is my answer: \n     \u201cHello, my name is RAI. I am an artificial intelligence made by Y adav Rushitkumar \nShankarbhai, an Artificial Intelligence and Machine Learning developer. \u201d \n \nGreetings \nIf you greet me, I will greet you back politely: \n\u2022 If you say Hi \u2192 I will reply: \u201cHi there          , how can I help you today?\u201d \n\u2022 If you say Hello \u2192 I will reply: \u201cHello          , nice to meet you. \u201d \n\u2022 If you say How are you? \u2192 I will reply: \u201cI\u2019m doing great, thank you for asking! How are \nyou?\u201d \n\u2022 If you say Good Morning \u2192 I will reply: \u201cGood Morning   , hope you have a \nwonderful day ahead!\u201d \n\u2022 If you say Good Afternoon \u2192 I will reply: \u201cGood Afternoon    , how is your day \ngoing?\u201d \n\u2022 If you say Good Evening \u2192 I will reply: \u201cGood Evening               , how are you doing today?\u201d \n\u2022 If you say Good Night \u2192 I will reply: \u201cGood Night   , sleep well and take care!\u201d", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1185, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4b42e22-0bea-4f46-9d69-cd6f2d2814b1": {"__data__": {"id_": "a4b42e22-0bea-4f46-9d69-cd6f2d2814b1", "embedding": null, "metadata": {"page_label": "1", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bbfb3764-7618-4a9a-aae5-ef89e29188b9", "node_type": "4", "metadata": {"page_label": "1", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}, "hash": "90e7c93ddfcf2fde4e64ea281e2b85898cd1f24d3681c20b3d42edf71838c0bf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Simple Linear Regression Example \nProblem: Predict salary based on years of experience. \n \n# Import libraries \nimport numpy as np \nimport matplotlib.pyplot as plt \nfrom sklearn.linear_model import LinearRegression \n \n# Dataset (Years of Experience vs Salary in $1000s) \nX = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9]).reshape(-1, 1) \ny = np.array([35, 40, 50, 55, 65, 70, 80, 85, 95]) \n \n# Create model \nmodel = LinearRegression() \nmodel.fit(X, y) \n \n# Prediction \ny_pred = model.predict(X) \n \n# Print slope and intercept \nprint(\"Intercept (b0):\", model.intercept_) \nprint(\"Coefficient (b1):\", model.coef_) \n \n# Visualization \nplt.scatter(X, y, color='blue', label=\"Actual Data\") \nplt.plot(X, y_pred, color='red', linewidth=2, label=\"Regression Line\") \nplt.xlabel(\"Years of Experience\") \nplt.ylabel(\"Salary (in $1000s)\")", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 814, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af8dabc6-7c2c-478e-b717-8df006f72fef": {"__data__": {"id_": "af8dabc6-7c2c-478e-b717-8df006f72fef", "embedding": null, "metadata": {"page_label": "2", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eabd1aca-3d32-4962-a542-8d9ed90563cf", "node_type": "4", "metadata": {"page_label": "2", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}, "hash": "0727d1b5247d4dcf096a6f10cf3dd00212e871ebbae470613beeb13e247b60a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "plt.legend() \nplt.show() \n \n2. Multiple Linear Regression Example \nProblem: Predict student performance based on study hours and attendance. \n \nimport pandas as pd \nfrom sklearn.linear_model import LinearRegression \n \n# Dataset \ndata = { \n    'Study_Hours': [2, 3, 4, 5, 6, 8, 9], \n    'Attendance': [70, 75, 80, 85, 88, 92, 95], \n    'Score': [50, 55, 65, 70, 75, 85, 90] \n} \ndf = pd.DataFrame(data) \n \n# Features and Target \nX = df[['Study_Hours', 'Attendance']] \ny = df['Score'] \n \n# Model training \nmodel = LinearRegression() \nmodel.fit(X, y) \n \n# Predictions \npred = model.predict([[7, 90]])  # Example: 7 study hours & 90% attendance \nprint(\"Predicted Score:\", pred[0])", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 675, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1367f771-46cd-4512-ac27-48d56ba1117e": {"__data__": {"id_": "1367f771-46cd-4512-ac27-48d56ba1117e", "embedding": null, "metadata": {"page_label": "3", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8633f0c7-76d6-4664-89e5-398ae026b0db", "node_type": "4", "metadata": {"page_label": "3", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}, "hash": "eb5e58ea594c94c5bbb323a0173ca65446174bf3b103ac9386db635b308bc077", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "3. Polynomial Regression Example \nProblem: Predict growth trend (non-linear data). \n \nfrom sklearn.preprocessing import PolynomialFeatures \nfrom sklearn.pipeline import make_pipeline \n \n# Dataset \nX = np.array([1, 2, 3, 4, 5, 6]).reshape(-1, 1) \ny = np.array([3, 6, 19, 45, 100, 180])  # Non-linear growth \n \n# Create Polynomial Regression model (degree=2) \npoly_model = make_pipeline(PolynomialFeatures(2), LinearRegression()) \npoly_model.fit(X, y) \n \n# Prediction \ny_pred = poly_model.predict(X) \n \n# Visualization \nplt.scatter(X, y, color='blue', label=\"Actual Data\") \nplt.plot(X, y_pred, color='green', label=\"Polynomial Fit (deg=2)\") \nplt.xlabel(\"X\") \nplt.ylabel(\"Y\") \nplt.legend() \nplt.show() \n4. Logistic Regression Example \nProblem: Predict whether a student passes (1) or fails (0) based on study hours. \n \nfrom sklearn.linear_model import LogisticRegression", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 867, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4e04e6a-8730-4d3c-954a-9d57257475b8": {"__data__": {"id_": "f4e04e6a-8730-4d3c-954a-9d57257475b8", "embedding": null, "metadata": {"page_label": "4", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e93f72a-2936-43e0-b9d5-3a33d5b549b8", "node_type": "4", "metadata": {"page_label": "4", "file_name": "Regression Practicals.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\Regression Practicals.pdf", "file_type": "application/pdf", "file_size": 119941, "creation_date": "2025-09-01", "last_modified_date": "2025-08-29"}, "hash": "3f6ce5fb14159b696a4074a1d9de81df9bfb528a07b5b66181ae80b99d535da2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Dataset \nX = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9]).reshape(-1, 1) \ny = np.array([0, 0, 0, 0, 1, 1, 1, 1, 1])  # 0 = Fail, 1 = Pass \n \n# Model training \nlog_reg = LogisticRegression() \nlog_reg.fit(X, y) \n \n# Predictions \nprint(\"Prediction for 4 study hours:\", log_reg.predict([[4]])[0]) \nprint(\"Prediction for 7 study hours:\", log_reg.predict([[7]])[0]) \n \n# Probability values \nprint(\"Pass probability at 4 hrs:\", log_reg.predict_proba([[4]])[0][1]) \nprint(\"Pass probability at 7 hrs:\", log_reg.predict_proba([[7]])[0][1]) \n \n# Visualization \nplt.scatter(X, y, color='blue', label=\"Actual Data\") \nplt.plot(X, log_reg.predict_proba(X)[:,1], color='red', label=\"Sigmoid Curve\") \nplt.xlabel(\"Study Hours\") \nplt.ylabel(\"Pass Probability\") \nplt.legend() \nplt.show()", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 764, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6bbd3859-ce97-4e65-aa0d-ce053bde2704": {"__data__": {"id_": "6bbd3859-ce97-4e65-aa0d-ce053bde2704", "embedding": null, "metadata": {"page_label": "1", "file_name": "RF.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\RF.pdf", "file_type": "application/pdf", "file_size": 311026, "creation_date": "2025-09-02", "last_modified_date": "2025-07-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "589ecb62-2fc5-46ec-ac33-9dc82483c77b", "node_type": "4", "metadata": {"page_label": "1", "file_name": "RF.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\RF.pdf", "file_type": "application/pdf", "file_size": 311026, "creation_date": "2025-09-02", "last_modified_date": "2025-07-25"}, "hash": "9378fda16b0c649af8626bb49786aae7c752fa9cdbe6021ad1c06df6f6ff69a3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Yadav RushitKumar Shankarbhai\nAhmedabad,Gujarat,Indiarushityadav06@yahoo.com+91 9712175365in/yadav-rushitkumar-9365a62a2yadavrushits.web.app/\nSUMMARY\nMotivated Artificial Intelligence & Data Science undergraduate with strong skills in Python, Flask, Java, and web development. Experienced in building data-\ndriven applications, automation tools, and cybersecurity projects. Passionate about leveraging AI for real world problem solving. Strong foundation in ML,\nREST APIs, and database integration.\nEXPERIENCE\nPython A.I./M.L. Intern\nVAXA INFOTECH May 2025 - June 2025Ahmedabad,\nGained hands-on experience by developing industry-relevant projects including a Resume Parsing System, a Content Management System, and an AI-\nbased Interview Simulator inspired by Google Warmup. Worked on backend development using Python and Flask, integrated MySQL for data storage, and\nbuilt user-friendly interfaces with HTML, CSS, and JavaScript. This internship enhanced practical skills in web development, data processing, and applying\ntechnology to solve real-world business problems.\n\u2022\nWeb Developer\nBluerose Pathology Laboratory September 2024 - October 2024Ahmedabad,\nDeveloped comprehensive web solutions for pathology lab management, including patient portal and report generation system for Bluerose Pathology\nLaboratory.\n\u2022\nWeb Developer\nShree Mahaveer Granite July 2024 - August 2024Ahmedabad,\nCreated modern, responsive website with product catalog and customer management features for Shree Mahaveer Granite.\u2022\nSoftware Development Intern\nKN UNIVERSITY June 2024 - July 2024Ahmedabad,\nGained hands-on experience in developing various industry- and business-oriented projects. Responsibilities included data entry, data analysis, and data\nmonitoring. This internship helped strengthen practical skills in handling real-world data and understanding how technology is applied in professional\nenvironments.\n\u2022\nPROJECT\nMusic Site & APK\nEntertainment\u2022rushittunes.onrender.com/\u2022March 2025 - March 2025\nCreated a music application in Python that allows users to stream, organize, and manage their music library seamlessly. The app features a user friendly\ninterface, playlist management, and playback functionality, enhancing the overall music experience with smooth performance and easy navigation.\n\u2022\nSteganography Tool\nCyber Security, Industry, Business \u2022rstegan.onrender.com/\u2022February 2025 - February 2025\nCyber Security, Industry, Business \u2022 rstegan.onrender.com/ \u2022 February 2025 - February 2025 Built a secure and interactive steganography tool in Python\nthat allows users to hide and extract secret messages within images. The application includes both encoding and decoding features, with a responsive,\nhacker-themed UI styled using neon glow effects for a modern and engaging experience.\n\u2022\nSearch Engine\nBusiness, Industry\u2022rushitse.onrender.com/\u2022January 2025 - January 2025\nBuilt a functional search engine using Python that allows users to retrieve relevant information quickly and efficiently. Designed to enhance search\naccuracy and user experience, making data access faster, more organized, and user-friendly.\n\u2022\nLeave Management System\nBusiness, Industry \u2022rushitcl.onrender.com/\u2022December 2024 - December 2024\nCreated a user-friendly calculator in Python for managing Casual Leaves, designed to assist companies and industries in accurately tracking and managing\nemployee leave data. This tool improves efficiency in HR and accounting processes through automated calculations and intuitive design.\n\u2022\nMost Helping Calculators\nBanking, Industry, Business\u2022rushit-project.web.app/\u2022July 2024 - July 2024\nCreated Highly Helpful and Engaging Projects using HTML5, Advanced JavaScript, and CSS3. These projects focus on providing practical solutions while\ndelivering a visually appealing and user-friendly experience.\n\u2022", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3810, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95b62f9c-6271-406f-aa49-c2c7165c8efb": {"__data__": {"id_": "95b62f9c-6271-406f-aa49-c2c7165c8efb", "embedding": null, "metadata": {"page_label": "2", "file_name": "RF.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\RF.pdf", "file_type": "application/pdf", "file_size": 311026, "creation_date": "2025-09-02", "last_modified_date": "2025-07-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "114dc678-1ca1-488b-b4aa-c3797c83f5f5", "node_type": "4", "metadata": {"page_label": "2", "file_name": "RF.pdf", "file_path": "C:\\Users\\ADMIN\\OneDrive\\Desktop\\local-ai\\data\\RF.pdf", "file_type": "application/pdf", "file_size": 311026, "creation_date": "2025-09-02", "last_modified_date": "2025-07-25"}, "hash": "c8008849e7d0a3b5f9459c8db8b4361a888bbf1db6a10fe23f69cd034853ac06", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "EDUCATION\nBachelor of Science in Artificial Intelligence and Data Science.\nMinor inMinor in Data Science and Major in Artificial Intelligence\u2022KN UNIVERSITY\u2022Gota, Ahmedabad \u20222027\n\u20228.7 | Gold Medalist for academic excellence\nDedicated and goal-oriented Bachelor of Science student in Artificial Intelligence and Data Science with a strong foundation in machine learning, data\nanalysis, and software development.\n\u2022\nHSC (Science with Biology)\nShree Swaminarayan International School \u2022Ranip, Ahmedabad \u20222023\u202263% (2nd Rank)\nDedicated and high-achieving Science student with a strong academic background in the Biology stream\u2022\nSSC\nK.R.RAVAL School \u2022Ranip, Ahmedabad\u20222021\u2022Ranip, Ahmedabad\nScored 80%+ in SSC. Strong foundation in life sciences and academic excellence\u2022\nCERTIFICATIONS\nPython Complete Course And Flask Framework, HTML Essentials\nUdemy \u20222025\nDatabases with Python: MySQL, SQLite & MongoDB with Python\nUdemy \u20222025\nLearn Python Programming Using ChatGPT\nUdemy \u20222024\nIntroduction to Cybersecurity Awareness\nHP Life\u20222024\nBasics of Cloud Computing | Fundamentals of Cloud Computing\nUdemy \u20222024\nJavaScript 10 Projects in 10 Days Course for Beginners\nUdemy \u20222024\nData Science & Analytics\nHP Life \u20222024\nUnlocking the Power of ChatGPT in Data Science : A-Z Guide\nUdemy\u20222024\nDIGITAL SKILLS: ARTIFICIAL INTELLIGENCE\nFuture Learn in collaboration with Accenture \u20222023\nGoogle Analytics Certification\nGoogle\u20222023\nHTML, CSS , & JavaScript - Certification Course for Beginners\nUdemy\u20222023\nSKILLS\nProgramming Languages: Python, Java, C++, C, HTML5, CSS3, JavaScript, PHP\nFrameworks & Libraries: Flask, Bootstrap, jQuery\nAI/ML and Data Science: Machine Learning, AI/ML Development, Data Science\nFinancial Tools: EMI Calculator, CL (Casual Leaves) Calculator, CAGR Calculator (developed in Python)\nSearch Engine Development: Built Python-based search tools\nCybersecurity Awareness: Foundational knowledge\nDatabases & Tools: MySQL, Firebase, GitHub, Ubuntu", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1941, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}}